// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5999.powerup;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainfrontLeft;
    public static SpeedController drivetrainrearleft;
    public static SpeedControllerGroup drivetrainleftDrive;
    public static SpeedController drivetrainfrontRight;
    public static SpeedController drivetrainrearRight;
    public static SpeedControllerGroup drivetrainrightDrive;
    public static DifferentialDrive drivetrainDifferentialDrive;
    public static Ultrasonic drivetrainfrontUltrasonic;
    public static Ultrasonic drivetrainRearUltrasonic;
    public static WPI_TalonSRX elevatorelevatorMotor;
    public static DigitalInput elevatorvaultPosSwitch;
    public static DigitalInput elevatorlowSwitchPosSwitch;
    public static DigitalInput elevatorhighSwitchPosSwitch;
    public static DigitalInput elevatorlowScalePosSwitch;
    public static DigitalInput elevatorhighScalePosSwitch;
    public static DigitalInput elevatorliftPointPosSwitch;
    public static AnalogPotentiometer elevatorposition_pot;
    public static WPI_TalonSRX cubeIntakeleft_intake;
    public static WPI_TalonSRX cubeIntakeright_intake;
    public static DigitalInput cubeIntakecubeInTrigger;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainfrontLeft = new Spark(0);
        LiveWindow.addActuator("Drivetrain", "frontLeft", (Spark) drivetrainfrontLeft);
        drivetrainfrontLeft.setInverted(false);
        drivetrainrearleft = new Spark(1);
        LiveWindow.addActuator("Drivetrain", "rearleft", (Spark) drivetrainrearleft);
        drivetrainrearleft.setInverted(false);
        drivetrainleftDrive = new SpeedControllerGroup(drivetrainfrontLeft, drivetrainrearleft  );
        LiveWindow.addActuator("Drivetrain", "leftDrive", drivetrainleftDrive);
        
        drivetrainfrontRight = new Spark(2);
        LiveWindow.addActuator("Drivetrain", "frontRight", (Spark) drivetrainfrontRight);
        drivetrainfrontRight.setInverted(false);
        drivetrainrearRight = new Spark(3);
        LiveWindow.addActuator("Drivetrain", "rearRight", (Spark) drivetrainrearRight);
        drivetrainrearRight.setInverted(false);
        drivetrainrightDrive = new SpeedControllerGroup(drivetrainfrontRight, drivetrainrearRight  );
        LiveWindow.addActuator("Drivetrain", "rightDrive", drivetrainrightDrive);
        
        drivetrainDifferentialDrive = new DifferentialDrive(drivetrainleftDrive, drivetrainrightDrive);
        LiveWindow.addActuator("Drivetrain", "Differential Drive", drivetrainDifferentialDrive);
        drivetrainDifferentialDrive.setSafetyEnabled(true);
        drivetrainDifferentialDrive.setExpiration(0.1);
        drivetrainDifferentialDrive.setMaxOutput(1.0);

        drivetrainfrontUltrasonic = new Ultrasonic(0, 1);
        LiveWindow.addSensor("Drivetrain", "frontUltrasonic", drivetrainfrontUltrasonic);
        
        drivetrainRearUltrasonic = new Ultrasonic(2, 3);
        LiveWindow.addSensor("Drivetrain", "RearUltrasonic", drivetrainRearUltrasonic);
        
        elevatorelevatorMotor = new WPI_TalonSRX(13);
        
        
        elevatorvaultPosSwitch = new DigitalInput(4);
        LiveWindow.addSensor("Elevator", "vaultPosSwitch", elevatorvaultPosSwitch);
        
        elevatorlowSwitchPosSwitch = new DigitalInput(5);
        LiveWindow.addSensor("Elevator", "lowSwitchPosSwitch", elevatorlowSwitchPosSwitch);
        
        elevatorhighSwitchPosSwitch = new DigitalInput(6);
        LiveWindow.addSensor("Elevator", "highSwitchPosSwitch", elevatorhighSwitchPosSwitch);
        
        elevatorlowScalePosSwitch = new DigitalInput(8);
        LiveWindow.addSensor("Elevator", "lowScalePosSwitch", elevatorlowScalePosSwitch);
        
        elevatorhighScalePosSwitch = new DigitalInput(9);
        LiveWindow.addSensor("Elevator", "highScalePosSwitch", elevatorhighScalePosSwitch);
        
        elevatorliftPointPosSwitch = new DigitalInput(10);
        LiveWindow.addSensor("Elevator", "liftPointPosSwitch", elevatorliftPointPosSwitch);
        
        elevatorposition_pot = new AnalogPotentiometer(1, 1.0, 0.0);
        LiveWindow.addSensor("Elevator", "position_pot", elevatorposition_pot);
        
        cubeIntakeleft_intake = new WPI_TalonSRX(10);
        
        
        cubeIntakeright_intake = new WPI_TalonSRX(11);
        
        
        cubeIntakecubeInTrigger = new DigitalInput(12);
        LiveWindow.addSensor("CubeIntake", "cubeInTrigger", cubeIntakecubeInTrigger);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
